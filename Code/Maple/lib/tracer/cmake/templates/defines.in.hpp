/* Copyright (c) 2017, Daniel Mensinger
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Daniel Mensinger nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL Daniel Mensinger BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*!
 * \file tracerDef.hpp
 * \note This file is automatically generated.
 * Please edit only defines.in.hpp in the folder "PROJECT_ROOT/cmake/templates/"
 */

#pragma once

#include <stdint.h>
#include <vector>
#include <string>

#define USE_GLIBC     @CM_UNIX_GLIBC@ //!< Whether GLIBC's execinfo.h (backtrace) was found or not
#define USE_LIBUNWIND @CM_UNIX_LIBUNWIND@ //!< Whether libunwind was found or not
#define USE_WINDOWS   @CM_WIN32_WINDOWS@ //!< Whether the project is build on windows

#define USE_DWFL      @CM_UNIX_LIBDWLF@ //!< Whether libdwfl was found or not
#define USE_BFD       @CM_UNIX_LIBBFD@ //!< Whether libbfd was found or not
#define USE_FALLBACK  @CM_UNIX_EXTERNALFALLBACK@ //!< Whether we can use the addr2line fallback

#define VERBOSE_DEBUG @CM_VERBOSE_DEBUG@ //!< Whether or not extra debug messages should be enabled

#if _WIN32
#include <Windows.h>
#undef max // WHY Windows WHYYYYY!?!? Please dont break functions in std!
#endif

#define DISABLE_STD_FILESYSTEM @CM_DISABLE_FILESYSTEM@ //!< Disables std::filesystem functions. Usefull when C++17 is not available

namespace tracer {

#if UINTPTR_MAX == 0xffffffff            // 32-bit
typedef uint32_t Address;
#elif UINTPTR_MAX == 0xffffffffffffffff  // 64-bit
typedef uint64_t Address;
#else                                    // wtf
#error "Could not detect address legth"
#endif

namespace constants {

const unsigned int MAX_FUNC_NAME   = 1024; //!< \brief The maximum length of a function name
const unsigned int MAX_TRACE_DEPTH = 512;  //!< \brief The maximum length of a stack trace

const int         VERSION_MAJOR     = @CM_VERSION_MAJOR@; //!< \brief The major version of Tracer
const int         VERSION_MINOR     = @CM_VERSION_MINOR@; //!< \brief The minor version of Tracer
const int         VERSION_PATCH     = @CM_VERSION_PATCH@; //!< \brief The patch version of Tracer
const int         GIT_LAST_TAG_DIFF = @CM_TAG_DIFF@; //!< \brief Number of commits since last tag
const char *const VERSION_GIT       = "@CM_VERSION_GIT@";  //!< \brief Git commit hash
const char *const INSTALL_PREFIX    = "@CMAKE_INSTALL_PREFIX@"; //!< \brief The CMake intall prefix
}
}
